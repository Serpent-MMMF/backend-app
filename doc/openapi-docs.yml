openapi: 3.0.0
info:
  version: 1.0.0
  title: My API
  description: This is the API
servers: []
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas: {}
  parameters: {}
paths:
  /user/login:
    post:
      security:
        - bearerAuth: []
      requestBody:
        required: true
        description: Login request body
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: user's email
                  example: user@gmail.com
                password:
                  type: string
                  description: user's password
                  example: password
              required:
                - email
                - password
      responses:
        "200":
          description: Login success response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  error:
                    type: string
                  data:
                    type: object
                    properties:
                      user:
                        type: object
                        properties:
                          name:
                            type: string
                            description: user's name
                            example: malik akbar
                          description:
                            type: string
                            description: user's description
                            example: I am a cool guys
                          role:
                            type: string
                            enum: &a1
                              - MENTEE
                              - MENTOR
                            description: user's role
                            example: MENTEE
                          email:
                            type: string
                            description: user's email
                            example: user@gmail.com
                          cityId:
                            type: string
                            description: user's city'
                            example: "1101"
                          imageUrl:
                            anyOf:
                              - type: string
                              - nullable: true
                              - nullable: true
                            description: user's image url
                            example: http://www.example.com
                          subscriptionStatus:
                            type: string
                            enum: &a2
                              - FREE
                              - PREMIUM
                            description: user subscription status
                            example: FREE
                        required:
                          - name
                          - description
                          - role
                          - email
                          - cityId
                          - imageUrl
                          - subscriptionStatus
                        description: user data
                      token:
                        type: string
                        description: auth JWT token
                        example: nasjfcnilkdsnkc
                    required:
                      - user
                      - token
                required:
                  - success
                  - message
  /user/register:
    post:
      security:
        - bearerAuth: []
      requestBody:
        required: true
        description: Register request body
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Name
                  example: John Doe
                description:
                  type: string
                  description: Description
                  example: I'm a cool guy
                role:
                  type: string
                  enum:
                    - MENTOR
                    - MENTEE
                  description: user's role
                  example: MENTEE
                email:
                  type: string
                  description: Email
                  example: johndoe@gmail
                password:
                  type: string
                  description: Password
                  example: 123mazk;
                cityId:
                  type: string
                  description: City ID
                  example: "1101"
                tagIds:
                  type: string
                  description: Tag IDs
                  example: 1,2,3
              required:
                - name
                - description
                - role
                - email
                - password
                - cityId
                - tagIds
      responses:
        "200":
          description: Register success response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  error:
                    type: string
                  data:
                    type: object
                    properties:
                      name:
                        type: string
                        description: user's name
                        example: malik akbar
                      description:
                        type: string
                        description: user's description
                        example: I am a cool guys
                      role:
                        type: string
                        enum: *a1
                        description: user's role
                        example: MENTEE
                      email:
                        type: string
                        description: user's email
                        example: user@gmail.com
                      cityId:
                        type: string
                        description: user's city'
                        example: "1101"
                      imageUrl:
                        anyOf:
                          - type: string
                          - nullable: true
                          - nullable: true
                        description: user's image url
                        example: http://www.example.com
                      subscriptionStatus:
                        type: string
                        enum: *a2
                        description: user subscription status
                        example: FREE
                    required:
                      - name
                      - description
                      - role
                      - email
                      - cityId
                      - imageUrl
                      - subscriptionStatus
                required:
                  - success
                  - message
  /book-group-session:
    post:
      security:
        - bearerAuth: []
      requestBody:
        required: true
        description: Create book group session request body
        content:
          application/json:
            schema:
              type: object
              properties:
                sessionId:
                  type: string
                  description: session's id
                  example: "1"
              required:
                - sessionId
      responses:
        "200":
          description: Create book group session success response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  error:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        description: User ID
                        example: "1"
                      createdAt:
                        type: string
                        nullable: true
                        description: user's created at
                        example: 2021-08-01T00:00:00.000Z
                      updatedAt:
                        type: string
                        nullable: true
                        description: user's updated at
                        example: 2021-08-01T00:00:00.000Z
                      menteeId:
                        type: string
                        description: mentee's id
                        example: "1"
                      sessionId:
                        type: string
                        description: session's id
                        example: "1"
                    required:
                      - id
                      - createdAt
                      - updatedAt
                      - menteeId
                      - sessionId
                required:
                  - success
                  - message
                description: Create book group session response
    get:
      security:
        - bearerAuth: []
      parameters:
        - schema:
            type: string
            description: session's id
            example: "1"
          required: false
          name: sessionId
          in: query
        - schema:
            type: string
            description: mentee's id
            example: "1"
          required: false
          name: menteeId
          in: query
      responses:
        "200":
          description: Get book group session success response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  error:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: User ID
                          example: "1"
                        createdAt:
                          type: string
                          nullable: true
                          description: user's created at
                          example: 2021-08-01T00:00:00.000Z
                        updatedAt:
                          type: string
                          nullable: true
                          description: user's updated at
                          example: 2021-08-01T00:00:00.000Z
                        menteeId:
                          type: string
                          description: mentee's id
                          example: "1"
                        sessionId:
                          type: string
                          description: session's id
                          example: "1"
                      required:
                        - id
                        - createdAt
                        - updatedAt
                        - menteeId
                        - sessionId
                required:
                  - success
                  - message
                description: Get book group session response
  "/book-group-session/{id}":
    get:
      security:
        - bearerAuth: []
      parameters:
        - schema:
            type: string
            description: book group session ID
            example: "1"
          required: true
          name: id
          in: path
      responses:
        "200":
          description: Get detail book group session success response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  error:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        description: User ID
                        example: "1"
                      createdAt:
                        type: string
                        nullable: true
                        description: user's created at
                        example: 2021-08-01T00:00:00.000Z
                      updatedAt:
                        type: string
                        nullable: true
                        description: user's updated at
                        example: 2021-08-01T00:00:00.000Z
                      menteeId:
                        type: string
                        description: mentee's id
                        example: "1"
                      sessionId:
                        type: string
                        description: session's id
                        example: "1"
                    required:
                      - id
                      - createdAt
                      - updatedAt
                      - menteeId
                      - sessionId
                required:
                  - success
                  - message
                description: Get detail book group session response
  /city:
    get:
      security:
        - bearerAuth: []
      parameters:
        - schema:
            type: string
            description: province's id
            example: "1"
          required: false
          name: provinceId
          in: query
      responses:
        "200":
          description: Get city success response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  error:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: User ID
                          example: "1"
                        createdAt:
                          type: string
                          nullable: true
                          description: user's created at
                          example: 2021-08-01T00:00:00.000Z
                        updatedAt:
                          type: string
                          nullable: true
                          description: user's updated at
                          example: 2021-08-01T00:00:00.000Z
                        name:
                          type: string
                          description: city's name
                          example: Jakarta
                        provinceId:
                          type: string
                          description: province's id
                          example: "1"
                      required:
                        - id
                        - createdAt
                        - updatedAt
                        - name
                        - provinceId
                required:
                  - success
                  - message
                description: Get city response
  "/city/{id}":
    get:
      security:
        - bearerAuth: []
      parameters:
        - schema:
            type: string
            description: city id
            example: "1"
          required: true
          name: id
          in: path
      responses:
        "200":
          description: Get detail city success response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  error:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        description: User ID
                        example: "1"
                      createdAt:
                        type: string
                        nullable: true
                        description: user's created at
                        example: 2021-08-01T00:00:00.000Z
                      updatedAt:
                        type: string
                        nullable: true
                        description: user's updated at
                        example: 2021-08-01T00:00:00.000Z
                      name:
                        type: string
                        description: city's name
                        example: Jakarta
                      provinceId:
                        type: string
                        description: province's id
                        example: "1"
                    required:
                      - id
                      - createdAt
                      - updatedAt
                      - name
                      - provinceId
                required:
                  - success
                  - message
                description: Get detail city response
  /group-session:
    post:
      security:
        - bearerAuth: []
      requestBody:
        required: true
        description: create group session request body
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: group discussion title
                  example: John Doe Group Session
                date:
                  type: string
                  nullable: true
                  description: group session date time
                  example: 2021-08-01T00:00:00.000Z
                meetingUrl:
                  type: string
                  description: meeting url
                  example: https://meet.google.com/123
                description:
                  type: string
                  description: group discussion description
                  example: This is a group discussion
                maxParticipant:
                  type: number
                  description: maximum number of participants
                  example: 10
              required:
                - name
                - date
                - meetingUrl
                - description
                - maxParticipant
      responses:
        "200":
          description: Create group session success response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  error:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        description: User ID
                        example: "1"
                      createdAt:
                        type: string
                        nullable: true
                        description: user's created at
                        example: 2021-08-01T00:00:00.000Z
                      updatedAt:
                        type: string
                        nullable: true
                        description: user's updated at
                        example: 2021-08-01T00:00:00.000Z
                      name:
                        type: string
                        description: group discussion title
                        example: John Doe Group Session
                      date:
                        type: string
                        nullable: true
                        description: user's updated at
                        example: 2021-08-01T00:00:00.000Z
                      meetingUrl:
                        type: string
                        description: meeting url
                        example: https://meet.google.com/123
                      mentorId:
                        type: string
                        description: mentor's id
                        example: "1"
                      description:
                        type: string
                        description: group discussion description
                        example: This is a group discussion
                      maxParticipant:
                        type: number
                        description: maximum number of participants
                        example: 10
                    required:
                      - id
                      - createdAt
                      - updatedAt
                      - name
                      - date
                      - meetingUrl
                      - mentorId
                      - description
                      - maxParticipant
                required:
                  - success
                  - message
                description: create group session response
    get:
      security:
        - bearerAuth: []
      parameters:
        - schema:
            type: string
            description: mentor's id
            example: "1"
          required: false
          name: mentorId
          in: query
        - schema:
            type: string
            nullable: true
            description: limit start date time
            example: 2021-08-01T00:00:00.000Z
          required: false
          name: limitStartDateTime
          in: query
        - schema:
            type: string
            nullable: true
            description: limit end date time
            example: 2021-08-01T00:00:00.000Z
          required: false
          name: limitEndDateTime
          in: query
      responses:
        "200":
          description: Get group session success response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  error:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: User ID
                          example: "1"
                        createdAt:
                          type: string
                          nullable: true
                          description: user's created at
                          example: 2021-08-01T00:00:00.000Z
                        updatedAt:
                          type: string
                          nullable: true
                          description: user's updated at
                          example: 2021-08-01T00:00:00.000Z
                        name:
                          type: string
                          description: group discussion title
                          example: John Doe Group Session
                        date:
                          type: string
                          nullable: true
                          description: user's updated at
                          example: 2021-08-01T00:00:00.000Z
                        meetingUrl:
                          type: string
                          description: meeting url
                          example: https://meet.google.com/123
                        mentorId:
                          type: string
                          description: mentor's id
                          example: "1"
                        description:
                          type: string
                          description: group discussion description
                          example: This is a group discussion
                        maxParticipant:
                          type: number
                          description: maximum number of participants
                          example: 10
                      required:
                        - id
                        - createdAt
                        - updatedAt
                        - name
                        - date
                        - meetingUrl
                        - mentorId
                        - description
                        - maxParticipant
                required:
                  - success
                  - message
                description: Get group session response
  "/group-session/{id}":
    get:
      security:
        - bearerAuth: []
      parameters:
        - schema:
            type: string
            description: group session ID
            example: "1"
          required: true
          name: id
          in: path
      responses:
        "200":
          description: Get detail group session success response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  error:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        description: User ID
                        example: "1"
                      createdAt:
                        type: string
                        nullable: true
                        description: user's created at
                        example: 2021-08-01T00:00:00.000Z
                      updatedAt:
                        type: string
                        nullable: true
                        description: user's updated at
                        example: 2021-08-01T00:00:00.000Z
                      name:
                        type: string
                        description: group discussion title
                        example: John Doe Group Session
                      date:
                        type: string
                        nullable: true
                        description: user's updated at
                        example: 2021-08-01T00:00:00.000Z
                      meetingUrl:
                        type: string
                        description: meeting url
                        example: https://meet.google.com/123
                      mentorId:
                        type: string
                        description: mentor's id
                        example: "1"
                      description:
                        type: string
                        description: group discussion description
                        example: This is a group discussion
                      maxParticipant:
                        type: number
                        description: maximum number of participants
                        example: 10
                    required:
                      - id
                      - createdAt
                      - updatedAt
                      - name
                      - date
                      - meetingUrl
                      - mentorId
                      - description
                      - maxParticipant
                required:
                  - success
                  - message
                description: Get detail group session response
  /province:
    get:
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Get province success response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  error:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: User ID
                          example: "1"
                        createdAt:
                          type: string
                          nullable: true
                          description: user's created at
                          example: 2021-08-01T00:00:00.000Z
                        updatedAt:
                          type: string
                          nullable: true
                          description: user's updated at
                          example: 2021-08-01T00:00:00.000Z
                        name:
                          type: string
                          description: province name
                          example: DKI Jakarta
                      required:
                        - id
                        - createdAt
                        - updatedAt
                        - name
                required:
                  - success
                  - message
                description: get province response
  "/province/{id}":
    get:
      security:
        - bearerAuth: []
      parameters:
        - schema:
            type: string
            description: province id
            example: "1"
          required: true
          name: id
          in: path
      responses:
        "200":
          description: Get detail province success response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  error:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        description: User ID
                        example: "1"
                      createdAt:
                        type: string
                        nullable: true
                        description: user's created at
                        example: 2021-08-01T00:00:00.000Z
                      updatedAt:
                        type: string
                        nullable: true
                        description: user's updated at
                        example: 2021-08-01T00:00:00.000Z
                      name:
                        type: string
                        description: province name
                        example: DKI Jakarta
                    required:
                      - id
                      - createdAt
                      - updatedAt
                      - name
                required:
                  - success
                  - message
                description: get detail province response
  /tag:
    get:
      security:
        - bearerAuth: []
      parameters:
        - schema:
            type: string
            description: user's id
            example: "1"
          required: false
          name: userId
          in: query
      responses:
        "200":
          description: Get tag success response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  error:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: User ID
                          example: "1"
                        createdAt:
                          type: string
                          nullable: true
                          description: user tag's created at
                          example: 2021-08-01T00:00:00.000Z
                        updatedAt:
                          type: string
                          nullable: true
                          description: user tag's updated at
                          example: 2021-08-01T00:00:00.000Z
                        userId:
                          type: string
                          description: user's id
                          example: "1"
                        tagId:
                          type: string
                          description: tag's id
                          example: "1"
                        tag:
                          anyOf:
                            - type: object
                              properties:
                                id:
                                  type: string
                                  description: User ID
                                  example: "1"
                                createdAt:
                                  type: string
                                  nullable: true
                                  description: user's created at
                                  example: 2021-08-01T00:00:00.000Z
                                updatedAt:
                                  type: string
                                  nullable: true
                                  description: user's updated at
                                  example: 2021-08-01T00:00:00.000Z
                                name:
                                  type: string
                                  description: tag name
                                  example: Software Engineering
                              required:
                                - id
                                - createdAt
                                - updatedAt
                                - name
                            - nullable: true
                            - nullable: true
                          description: tag detail
                      required:
                        - id
                        - createdAt
                        - updatedAt
                        - userId
                        - tagId
                        - tag
                required:
                  - success
                  - message
                description: Get tag response
  /tag/list:
    get:
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Get tag success response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  error:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: User ID
                          example: "1"
                        createdAt:
                          type: string
                          nullable: true
                          description: user's created at
                          example: 2021-08-01T00:00:00.000Z
                        updatedAt:
                          type: string
                          nullable: true
                          description: user's updated at
                          example: 2021-08-01T00:00:00.000Z
                        name:
                          type: string
                          description: tag name
                          example: Software Engineering
                      required:
                        - id
                        - createdAt
                        - updatedAt
                        - name
                required:
                  - success
                  - message
                description: Get tag list response
  /user/self:
    put:
      security:
        - bearerAuth: []
      requestBody:
        required: true
        description: Update Profile request body
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: user's name
                  example: John Doe
                description:
                  type: string
                  description: user's description
                  example: I am a mentor
                subscriptionStatus:
                  type: string
                  description: user's subscription status
                  example: FREE
                imageUrl:
                  type: string
                  description: user's image url
                  example: https://i.imgur.com/123.jpg
                cityId:
                  type: string
                  description: user's city id
                  example: "1101"
                tagIds:
                  type: string
                  description: comma separated values
                  example: 1,2,3
              required:
                - name
                - description
                - subscriptionStatus
                - imageUrl
                - cityId
                - tagIds
      responses:
        "200":
          description: Update Profile success response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  error:
                    type: string
                  data:
                    type: object
                    properties:
                      name:
                        type: string
                        description: user's name
                        example: malik akbar
                      description:
                        type: string
                        description: user's description
                        example: I am a cool guys
                      role:
                        type: string
                        enum: *a1
                        description: user's role
                        example: MENTEE
                      email:
                        type: string
                        description: user's email
                        example: user@gmail.com
                      cityId:
                        type: string
                        description: user's city'
                        example: "1101"
                      imageUrl:
                        anyOf:
                          - type: string
                          - nullable: true
                          - nullable: true
                        description: user's image url
                        example: http://www.example.com
                      subscriptionStatus:
                        type: string
                        enum: *a2
                        description: user subscription status
                        example: FREE
                    required:
                      - name
                      - description
                      - role
                      - email
                      - cityId
                      - imageUrl
                      - subscriptionStatus
                required:
                  - success
                  - message
                description: Update profile response
    get:
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Get Self Profile success response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  error:
                    type: string
                  data:
                    type: object
                    properties:
                      name:
                        type: string
                        description: user's name
                        example: malik akbar
                      description:
                        type: string
                        description: user's description
                        example: I am a cool guys
                      role:
                        type: string
                        enum: *a1
                        description: user's role
                        example: MENTEE
                      email:
                        type: string
                        description: user's email
                        example: user@gmail.com
                      cityId:
                        type: string
                        description: user's city'
                        example: "1101"
                      imageUrl:
                        anyOf:
                          - type: string
                          - nullable: true
                          - nullable: true
                        description: user's image url
                        example: http://www.example.com
                      subscriptionStatus:
                        type: string
                        enum: *a2
                        description: user subscription status
                        example: FREE
                    required:
                      - name
                      - description
                      - role
                      - email
                      - cityId
                      - imageUrl
                      - subscriptionStatus
                required:
                  - success
                  - message
                description: Profile response
  "/user/{id}":
    get:
      security:
        - bearerAuth: []
      parameters:
        - schema:
            type: string
            description: User ID
            example: "1"
          required: true
          name: id
          in: path
      responses:
        "200":
          description: Get Profile success response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  error:
                    type: string
                  data:
                    type: object
                    properties:
                      name:
                        type: string
                        description: user's name
                        example: malik akbar
                      description:
                        type: string
                        description: user's description
                        example: I am a cool guys
                      role:
                        type: string
                        enum: *a1
                        description: user's role
                        example: MENTEE
                      email:
                        type: string
                        description: user's email
                        example: user@gmail.com
                      cityId:
                        type: string
                        description: user's city'
                        example: "1101"
                      imageUrl:
                        anyOf:
                          - type: string
                          - nullable: true
                          - nullable: true
                        description: user's image url
                        example: http://www.example.com
                      subscriptionStatus:
                        type: string
                        enum: *a2
                        description: user subscription status
                        example: FREE
                    required:
                      - name
                      - description
                      - role
                      - email
                      - cityId
                      - imageUrl
                      - subscriptionStatus
                required:
                  - success
                  - message
                description: Profile response
  /user:
    get:
      security:
        - bearerAuth: []
      parameters:
        - schema:
            type: string
            enum:
              - MENTOR
              - MENTEE
            description: user's role
            example: MENTOR
          required: false
          name: role
          in: query
        - schema:
            type: string
            description: comma separated values
            example: 1,2,3
          required: false
          name: tagIds
          in: query
        - schema:
            type: boolean
            description: user on my city
            example: true
          required: false
          name: onMyCity
          in: query
        - schema:
            type: boolean
            description: user on my province
            example: true
          required: false
          name: onMyProvince
          in: query
        - schema:
            type: boolean
            description: user premium only
            example: true
          required: false
          name: premiumOnly
          in: query
      responses:
        "200":
          description: Search user success response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  error:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          description: user's name
                          example: malik akbar
                        description:
                          type: string
                          description: user's description
                          example: I am a cool guys
                        role:
                          type: string
                          enum: *a1
                          description: user's role
                          example: MENTEE
                        email:
                          type: string
                          description: user's email
                          example: user@gmail.com
                        cityId:
                          type: string
                          description: user's city'
                          example: "1101"
                        imageUrl:
                          anyOf:
                            - type: string
                            - nullable: true
                            - nullable: true
                          description: user's image url
                          example: http://www.example.com
                        subscriptionStatus:
                          type: string
                          enum: *a2
                          description: user subscription status
                          example: FREE
                      required:
                        - name
                        - description
                        - role
                        - email
                        - cityId
                        - imageUrl
                        - subscriptionStatus
                    description: Search user response data
                required:
                  - success
                  - message
                description: Search user response
